---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sonar-deployment
  labels:
    app: sonar-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sonar-deployment
    spec:
      containers:
      - name: sonarqube
        image: sonarqube:6.5
        ports:
        - name: sonarqube
          containerPort: 9000
        env:
        - name: SONARQUBE_JDBC_USERNAME
          value: sonar
        - name: SONARQUBE_JDBC_PASSWORD
          value: sonar
        - name: SONARQUBE_JDBC_URL
          value: jdbc:mysql://sonar-mysql:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true
        volumeMounts:
         - name: sonarqube-extensions
           mountPath: /opt/sonarqube/extensions
         - name: sonarqube-data
           mountPath: /opt/sonarqube/data
      volumes:
      - name: sonarqube-extensions
        nfs:
          server: ""
          path: "/sonarqube/extensions"
          readOnly: false
      - name: sonarqube-data
        nfs:
          server: ""
          path: "/sonarqube/data"
          readOnly: false

#---
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: sonar
#  annotations:
#    kubernetes.io/ingress.class: "nginx"
#    ingress.kubernetes.io/ssl-redirect: "false"
#spec:
#  rules:
#  - host: sonar.vipps.no
#    http:
#      paths:
#      - path: /
#        backend:
#          serviceName: sonar-svc
#          servicePort: 80

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sonar-mysql-deployment
  labels:
    app: sonar-mysql-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sonar-mysql-deployment
    spec:
      containers:
      - image: mysql:5.7
        name: sonar-mysql-deployment
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: sonar
        - name: MYSQL_USER
          value: sonar
        - name: MYSQL_PASSWORD
          value: sonar
        volumeMounts:
         - name: mysql-data
           mountPath: /var/lib/mysql
      volumes:
      - name: mysql-data
        nfs:
          server: ""
          path: "/sonarqube/mysql"
          readOnly: false

---
apiVersion: v1
kind: Service
metadata:
  name: sonar-mysql
  labels:
    name: sonar-mysql
spec:
  ports:
    - name: mysql
      # port: is the abstracted Service port,
      # which can be any port other pods use to access the Service
      port: 3306
  selector:
    app: sonar-mysql-deployment

---
apiVersion: v1
kind: Service
metadata:
  name: sonar-svc
  labels:
    name: sonar-svc
spec:
  ports:
  - protocol: TCP
    # port: is the abstracted Service port
    # which can be any port other pods use to access the Service
    port: 80
    # targetPort: is the port the container accepts traffic on
    targetPort: 9000
  selector:
    app: sonar-deployment